-- WHERE 절  --> 조건

/*
    표현식 (   =   <   >   !=  >= <=   )
    
    NULL,   IS NULL,  IS NOT NULL
    ( ), NOT,   AND,    OR
*/


SELECT FIRST_NAME, LAST_NAME, SALARY 
FROM EMPLOYEES
WHERE FIRST_NAME = 'Julia';

-- 
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY >=9000;


-- WHERE 에 Shanta 보다 스펠링이 이후인 리스트가 출력
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME >= 'Shanta';

SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME >= 'A';

-- 매니저 아이디가 널인 사람들 출력
SELECT FIRST_NAME, LAST_NAME, MANAGER_ID
FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;

-- 매니저 아이디가 널이 아닌 사람들 출력
SELECT FIRST_NAME, LAST_NAME, MANAGER_ID
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL;

SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME = 'Shanta' OR FIRST_NAME ='John';

--FIRST_NAME 이 SHANTA 와 JOHN 둘다 SALARY가 3000이상인 리스트
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME = 'Shanta' 
    OR FIRST_NAME = 'John'
        AND SALARY > 3000;
        

SELECT *
FROM EMPLOYEES
WHERE HIRE_DATE > '06/12/31';

-- ALL(AND와 비슷), ANY(OR과 비슷)
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME = ALL('Julia','John');

-- FIRST_NAME 이 JULIA 와 JOHN 인 사람 출력
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME = ANY('Julia','John');

SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME <= 'Julia' AND FIRST_NAME >='John';

--IN, NOT IN
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY IN (4000, 3200, 6000);

SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME IN('Julia','John');

SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME NOT IN('Julia','John');

SELECT FIRST_NAME, LAST_NAME, MANAGER_ID
FROM EMPLOYEES
WHERE MANAGER_ID IN(120,100);

--EXIST
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE EXISTS (SELECT 1 FROM DUAL);--1을 리턴한다.

SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE NOT EXISTS (SELECT 1 FROM DUAL);

SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES A
WHERE EXISTS (SELECT 1 FROM DUAL WHERE A.JOB_ID = 'IT_PROG');


-- BETWEEN 범위 연산자
-- SALARY >= 4000 AND SALARY <=9000
-- SALARY BETWEEN 4000 AND 9000
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY >= 3200 AND SALARY <=9000;

SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY BETWEEN 3200 AND 9000;

-- SALARY <= 4000 AND SALARY >=9000
-- SALARY NOT BETWEEN 4000 AND 9000
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY NOT BETWEEN 3200 AND 9000;

-- LIKE 사용빈도수가 높다.
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'G_ra_d'; -- _에는 뭐가 오든 상관없이 일치하는 결과를 전송한다.

SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'K%y'; -- %는 글자의 제한이 없다.

SELECT FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE LIKE '06/%';




