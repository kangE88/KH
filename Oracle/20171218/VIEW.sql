/*
    VIEW : 가상 테이블
    VIEW 는 실제로 저장되는 것은 아니다.
    한개의 VIEW로 여러개의 데이터를 검색할 수 있다
    제한을 설정할 수 있다 -- READONLY
    다양하고 빠른 조회
*/

CREATE VIEW UV_TEST_01(JOB_ID, JOB_TITLE, MIN_SALARY)
AS
SELECT JOB_ID, JOB_TITLE, MIN_SALARY
FROM JOBS;

SELECT * FROM UV_TEST_01; -- 뷰테이블 생성 확인

CREATE TABLE TB_TEST_01(
    KEY_01 VARCHAR2(10),
    KEY_02 VARCHAR2(10),
    COL_01 VARCHAR2(100),
    COL_02 VARCHAR2(100),
    CONSTRAINT PK_TEST_01 PRIMARY KEY(KEY_01, KEY_02)
);

CREATE OR REPLACE VIEW UV_TEST_01(
    KEY_01,
    KEY_02,
    COL_01,
    CONSTRAINT PK_UV_TEST_01 PRIMARY KEY(KEY_01, KEY_02)DISABLE NOVALIDATE
)
AS 
SELECT KEY_01, KEY_02, COL_01 FROM TB_TEST_01;

--만들어진 뷰테이블 확인
SELECT * FROM UV_TEST_01;

INSERT INTO UV_TEST_01(KEY_01,KEY_02,COL_01)
VALUES('AAA','aaa','111');

INSERT INTO UV_TEST_01 VALUES('BBB','bbb','222');

CREATE OR REPLACE VIEW EMPVIEW(
    EMPLOYEE_ID,
    LAST_NAME,
    EMAIL,
    HIRE_DATE,
    JOB_ID,
    CONSTRAINT  PK_UV_EMP PRIMARY KEY (EMPLOYEE_ID) DISABLE NOVALIDATE
)
AS
SELECT EMPLOYEE_ID, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID FROM EMPLOYEES;


INSERT INTO EMPVIEW VALUES(300,'KIM','KIM@NAVER.COM',SYSDATE,'IT_PROG');

DELETE EMPVIEW
WHERE LAST_NAME ='KIM';

-- 두개의 테이블에 있는 데이터들을 VIEW를통해서 한꺼번에 취득
CREATE OR REPLACE VIEW DEPT_EMP_VIEW
AS
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT_NAME, LOCATION_ID 
FROM EMPLOYEES E, DEPARTMENTS D 
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
WITH READ ONLY; -- 읽기 전용

SELECT * FROM DEPT_EMP_VIEW
ORDER BY SALARY DESC;

UPDATE DEPT_EMP_VIEW
SET SALARY = 12345
WHERE EMPLOYEE_ID =100;

ROLLBACK;

-- 문제 1 EMPLOYEES 테이블에서 20번 부서의 세부 사항을 포함하는 EMP_20 VIEW를 생성하라
CREATE OR REPLACE VIEW EMP_20 AS SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID=20;

SELECT * FROM EMP_20;

-- 문제 2 EMPLOYEES 테이블에서 30번 부서만 EMPLOYEE_ID 를 EMP_NO로
-- LAST NAME을 name으로 SALARY를 sal로 바꾸어 EMP_30 VIEW를 생성하라.

CREATE OR REPLACE VIEW EMP_30 (EMP_NO, FIRST_NAME, name, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, sal, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)AS SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID=30;

SELECT * FROM EMP_30;

-- 문제 3 부서별로 부서명, 최소 급여, 최대 급여, 부서의 평균 급여를 포함하는 DEPT_SUM_VIEW를 생성하여라.

SELECT * FROM DEPARTMENTS

CREATE OR REPLACE VIEW DEPT_SUM_VIEW ("부서명","최소급여","최대급여","부서의평균급여") 
AS
SELECT DEPARTMENT_NAME, MIN(SALARY),MAX(SALARY),AVG(SALARY)
FROM  EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME;

SELECT * FROM DEPT_SUM_VIEW

-- 문제 4 앞에서 생성한 EMP_20, EMP_30 VIEW를 삭제하여라.

DROP VIEW EMP_20
DROP VIEW EMP_30


